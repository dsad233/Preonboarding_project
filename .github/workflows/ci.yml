name: Node.js CI

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint
      - name: Generate Prisma Client
        run: npx prisma generate
      - name: code Test (testcode Test)
        run: npm test


deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            # 프로젝트 디렉토리로 이동
            cd /home/ubuntu/Preonboarding_project
            
            # GitHub에서 최신 코드를 가져옴
            git pull
            
            # .env 파일 생성
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
            echo "HASH_ROUND=${{ secrets.HASH_ROUND }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "JWT_SECRET_REFRESH=${{ secrets.JWT_SECRET_REFRESH }}" >> .env

						# node 관련 환경 설정 가져오기 위해 실행
            source /home/ubuntu/.nvm/nvm.sh
            # 서버 실행 시크립트 가동!
            source ./run.sh